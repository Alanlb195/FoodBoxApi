// <auto-generated />
using FoodBoxApi.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodBoxApi.Migrations
{
    [DbContext(typeof(FoodBoxContext))]
    [Migration("20220627210102_Tablas Categoria, Producto y Surcursal")]
    partial class TablasCategoriaProductoySurcursal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_spanish_ci")
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("FoodBoxApi.Models.Database.Categoria", b =>
                {
                    b.Property<uint>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(8) unsigned zerofill")
                        .HasColumnName("categoriaId");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.HasKey("CategoriaId");

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("FoodBoxApi.Models.Database.Producto", b =>
                {
                    b.Property<uint>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(8) unsigned zerofill")
                        .HasColumnName("productoId");

                    b.Property<uint>("CategoriaId")
                        .HasColumnType("int(8) unsigned zerofill")
                        .HasColumnName("categoriaId");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreImagen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreImagen");

                    b.Property<int>("Precio")
                        .HasColumnType("int(5)")
                        .HasColumnName("precio");

                    b.Property<uint>("SucursalId")
                        .HasColumnType("int(8) unsigned zerofill")
                        .HasColumnName("sucursalId");

                    b.HasKey("ProductoId");

                    b.HasIndex(new[] { "CategoriaId" }, "ProductoCATGID-CategId");

                    b.HasIndex(new[] { "SucursalId" }, "ProductoSCID-SucursalID");

                    b.ToTable("producto", (string)null);
                });

            modelBuilder.Entity("FoodBoxApi.Models.Database.Sucursal", b =>
                {
                    b.Property<uint>("SucursalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(8) unsigned zerofill")
                        .HasColumnName("sucursalId");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("horario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ubicacion");

                    b.Property<string>("UbicacionAdc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ubicacionAdc");

                    b.HasKey("SucursalId")
                        .HasName("PRIMARY");

                    b.ToTable("sucursal", (string)null);
                });

            modelBuilder.Entity("FoodBoxApi.Models.Database.Producto", b =>
                {
                    b.HasOne("FoodBoxApi.Models.Database.Categoria", "Categoria")
                        .WithMany("Producto")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ProductoCATGID-CategId");

                    b.HasOne("FoodBoxApi.Models.Database.Sucursal", "Sucursal")
                        .WithMany("Productos")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ProductoSCID-SucursalID");

                    b.Navigation("Categoria");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("FoodBoxApi.Models.Database.Categoria", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("FoodBoxApi.Models.Database.Sucursal", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
